How did viewing a diff between two versions of a file help you see the bug that was introduced?
+/- signs help me to identify where the differences are, and I only had to look at lines with + sign.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
When you make an error, it's easy to go back to what it was.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

pros
you don't need to too many snapshots of the history, so it is easier to find the right snapshot and go back to that version.

cons
the quality of the commit depends on how other programmers commit. If they don't commit so often, the quality of commit history gets worse and worse.


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Some files are dependent on each other; e.g. html file and css.


How can you use the commands git log and git diff to view the history of files?
git log to view all the history of commits. git diff to see which lines were added or deleted from the previous commit or any other commits.


How might using version control make you more confident to make changes that could break something?
By using checkout, you can go back to a program it used to be at some point in the past, and see if it re-produces an error or not.

